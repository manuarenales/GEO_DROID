@page "/lecturaFinalForm"

@using Dispatcher = Fluxor.Dispatcher
@using GEO_DROID.Store.Forms
@inject IDispatcher Dispatcher
@inject IState<AveriaFormState> AveriaEstadoState
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IStringLocalizer<StringLocalizer> Localizer
@inject IJSRuntime JS

@if (AveriaEstadoState?.Value.AveriaSelected != null)
{
    <form class="w-100 content overflow-auto  w-100 d-flex flex-column align-items-center justify-content-start " needs-validation>
        <div class="row w-100 bg-dark ">
            <div class="col-12 w-100 d-flex flex-column justify-content-center align-items-center  ">

                <span style="color:white" class="SubTitulo">
                    Tipo Lectura  GEOLINE
                </span>
                @* <span style="color:white" class="SubTitulo"> </span>  *@
            </div>
            <div class="col-12 w-100 d-flex flex-column justify-content-center align-items-center  ">
            </div>
        </div>
        @if (AveriaEstadoState.Value.LecturaDetallesSelected != null)
        {
            @foreach (var entry in AveriaEstadoState.Value.LecturaDetallesSelected)
            {
                var item = entry.Key;
                var lecturaDetalle = entry.Value;

                <div class="row w-100">
                    <div class="col-12 w-100 border d-flex flex-column justify-content-start mb-2">
                        <span>@item.tipoContadores (@item.valorPaso)</span>
                        <input type="number" class="mb-1" @bind="lecturaDetalle.valor" />
                    </div>
                </div>
            }
        }
    </form>

    <div class="w-100 bg-red" style="height:8vw;"></div>

    <div class="row m-1 fixed-bottom  ">
        <div class="col-4 p-1">
            <button type="button" class="btn btn-secondary w-100" @onclick="GuardarLectura ">Guardar</button>
        </div>
        <div class="col-4 p-1">
            <button type="button" class="btn btn-secondary w-100" @onclick="LeerLectura ">Leer</button>
        </div>
        <div class="col-4 p-1">
            <button type="button" class="btn btn-secondary w-100" @onclick="CancelarLectura ">Cancelar </button>
        </div>
    </div>
}



@code {

    // public Dictionary<PatContDetalle, GeoDroid.Data.LecturaDetalle> LecturasDetalle = new Dictionary<PatContDetalle, LecturaDetalle>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (AveriaEstadoState?.Value.AveriaSelected is not null)
        {
            //tenemos un averia seleccionada estamos modificando
            if (AveriaEstadoState.Value.AveriaSelected.Incidencia.maquina.patronContador is not null)
            {
                if (AveriaEstadoState.Value.LecturaDetallesSelected is null)
                {
                    Dispatcher.Dispatch(new LoadLecturaDetalleForAveriaForm(AveriaEstadoState.Value.AveriaSelected.Incidencia.maquina.patronContador, AveriaEstadoState.Value.AveriaSelected.Incidencia));
                }
            }
        }

    }

    public async void GuardarLectura()
    {
        Dispatcher.Dispatch(new changeLecturasDetalleSelectedForAveriasForm(AveriaEstadoState.Value.LecturaDetallesSelected, AveriaEstadoState.Value.lecturacontadorId));
        GoBack();
    }

    public async void CancelarLectura()
    {
        Dispatcher.Dispatch(new changeLecturasDetalleSelectedForAveriasForm(null, 0));
        GoBack();
    }

    public async void LeerLectura()
    {
        //10 into 11 into 12 into
    }

    private async void GoBack()
    {
        await JS.InvokeVoidAsync("history.back");
    }

}