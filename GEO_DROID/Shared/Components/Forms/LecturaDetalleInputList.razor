@using GeoDroid.Data               @* For PatContDetalle *@
@using GEO_DROID.Store.Forms       @* For AveriaFormState *@
@using GEO_DROID.Store             @* For Actions like UpdateAveriaFormLecturaDetalleValueAction *@
@using Fluxor                      @* For IState<>, IDispatcher *@
@using Microsoft.Extensions.Localization @* For IStringLocalizer *@
@using GEO_DROID.Resources.Languages @* For StringLocalizer marker class (if not ambiguous with _Imports) *@
@using Microsoft.FluentUI.AspNetCore.Components

@inject IState<AveriaFormState> AveriaFormState
@inject IDispatcher Dispatcher
@inject IStringLocalizer<StringLocalizer> Localizer

@if (AveriaFormState.Value.LecturaDetallesSelected != null && AveriaFormState.Value.LecturaDetallesSelected.Any())
{
    <FluentLabel Typo="Typography.H5" Style="margin-top: 1rem;">@Localizer["LecturaContadores"]</FluentLabel>
    <FluentDivider />
    <div style="max-height: 300px; overflow-y: auto; padding: 0.5rem;">
        @foreach (var patContDetalleKey in AveriaFormState.Value.LecturaDetallesSelected.Keys.OrderBy(p => p.orden))
        {
            var lecturaDetalle = AveriaFormState.Value.LecturaDetallesSelected[patContDetalleKey];

            <FluentStack Orientation="Orientation.Vertical" Style="margin-bottom: 1rem; padding: 0.5rem; border: 1px solid #ccc; border-radius: 4px;">
                <FluentLabel Typo="Typography.H4"><strong>@patContDetalleKey.tipoContadores</strong></FluentLabel>
                <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="10">
                    <FluentNumberField Label="@Localizer["ValorAnterior"]"
                                       Value="lecturaDetalle?.valorAntes ?? 0"
                                       ValueChanged="(long newValue) => HandleValorAntesChanged(patContDetalleKey, newValue)"
                                       Style="width: 100%;" />
                    <FluentNumberField Label="@Localizer["ValorActual"]"
                                       Value="lecturaDetalle?.valor ?? 0"
                                       ValueChanged="(long newValue) => HandleValorActualChanged(patContDetalleKey, newValue)"
                                       Style="width: 100%;" />
                </FluentStack>
                @if (lecturaDetalle != null && lecturaDetalle.tieneAjuste)
                {
                    <FluentLabel Color="Color.Warning">@Localizer["AjusteDetectado"]</FluentLabel>
                }
            </FluentStack>
        }
    </div>
}
else
{
    <FluentLabel Typo="Typography.H4">@Localizer["NoHayContadoresDefinidosParaMaquina"]</FluentLabel>
}

@code {
    private void HandleValorAntesChanged(PatContDetalle patKey, long newValue)
    {
        Dispatcher.Dispatch(new UpdateAveriaFormLecturaDetalleValueAction(patKey, newValue, true));
    }

    private void HandleValorActualChanged(PatContDetalle patKey, long newValue)
    {
        Dispatcher.Dispatch(new UpdateAveriaFormLecturaDetalleValueAction(patKey, newValue, false));
    }
}