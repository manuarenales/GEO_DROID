@using GEO_DROID.Database.Models.DTO
@using GEO_DROID.Services
@using GEO_DROID.Services.SincroService
@using System.Globalization;
@using System.Text.Json
@using GEO_DROID.Store
@using GEO_DROID.Store.Application
@using GEO_DROID.Store.CultureCase
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using IOGesture.Components

@inject IState<AplicacionState> state
@inject IState<CultureState> CultureState
@inject IDispatcher Dispatcher
@inject IStringLocalizer<StringLocalizer> Localizer;


<FluentStack Orientation="Orientation.Vertical">
    @foreach (MainMenuItem item in state.Value.MainMenuItems)
    {
        <FluentGridItem>
            <Gesture OnTap="@(() => HandleClick(item))">

                <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Start" VerticalAlignment="VerticalAlignment.Center">
                    <FluentEmoji Value="item.icon" style="width:64px; height:64px;" />

                    <FluentLabel Typo="Typography.H3" Color="@Color.Neutral">
                        @Localizer[item.title]
                    </FluentLabel>
                </FluentStack>

            </Gesture>
        </FluentGridItem>
        <FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"></FluentDivider>
    }
</FluentStack>



@code {

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }


    void HandleClick(MainMenuItem item)
    {
        if (item.ruta == "sincronizacion")
        {
            Dispatcher.Dispatch(new SincronizationAction());
        }
        else
        {
            Dispatcher.Dispatch(new NavigationToAction(item.ruta));
        }
    }

}