  @page "/cargaForm"
  @using GEO_DROID.Services
  @using Dispatcher = Fluxor.Dispatcher
@using GEO_DROID.Store.Forms
  @inject IDispatcher Dispatcher
  @inject IJSRuntime JS
  @inject IStringLocalizer<StringLocalizer> Localizer
  @inherits Fluxor.Blazor.Web.Components.FluxorComponent
  @inject IState<AveriaFormState> FormAveriaState


@if (FormAveriaState?.Value is not null)
{
    <form class="w-100 content overflow-auto  w-100 d-flex flex-column align-items-center justify-content-start " needs-validation>
        <div class="row w-100 bg-dark ">
            <div class="col-12 w-100 d-flex flex-column justify-content-center align-items-center  ">
                <span style="color:white" class="SubTitulo">@FormAveriaState.Value.AveriaSelected.Incidencia.maquina.establecimiento.nombre</span>
            </div>
            <div class="col-12 w-100 d-flex flex-column justify-content-center align-items-center  ">
                @if (carga != null)
                {
                    @if (carga.Incidencia != null)
                    {
                        @if (carga.Incidencia.maquina != null)
                        {
                            <span style="color:white" class="SubTitulo">@FormAveriaState.Value.AveriaSelected.Incidencia.maquina.descripcionDistribucion</span>
                        }

                    }
                }
            </div>
        </div>
        @if (carga != null)
        {
            <div class="row w-100 ">
                <div class="col-12 w-100 border d-flex flex-column justify-content-start">
                    <span>Carga</span>
                    <input @bind="carga.cargaEmpresa" type="number" class="mb-1" />
                </div>

                <div class="col-12 w-100 border d-flex flex-column justify-content-start">
                    <span>Recuperacion </span>
                    <input @bind="carga.recuperacionEmpresa" type="number" class="mb-1" />
                </div>
            </div>
        }
    </form>

    <div class="w-100 bg-red" style="height:8vw;"></div>
    <div class="row m-1 fixed-bottom  ">
        <div class="col-6 p-1">
            <button type="button" class="btn btn-secondary w-100" @onclick="GuardarCarga ">Guardar</button>
        </div>
        <div class="col-6 p-1">
            <button type="button" class="btn btn-secondary w-100" @onclick="CancelarCarga ">Cancelar </button>
        </div>
    </div>

}


@code {

    public Carga carga = new Carga();

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (FormAveriaState?.Value.CargaSelected is not null)
        {
            //tenemos una Carga seleccionada estamos modificando
            carga = FormAveriaState?.Value.CargaSelected;
        }
        else
        {
            // no tenemos una Carga  seleccionada estamos creando una nueva;
            Dispatcher.Dispatch(new changeCargaSelectedForAveriasForm(carga));
            Dispatcher.Dispatch(new ValidateAveriaFormState());
        }

    }

    public async void GuardarCarga()
    {
        Dispatcher.Dispatch(new changeCargaSelectedForAveriasForm(carga));
        GoBack();
    }

    public async void CancelarCarga()
    {
        Dispatcher.Dispatch(new changeCargaSelectedForAveriasForm(null));
        GoBack();
    }


    private async void GoBack()
    {
        await JS.InvokeVoidAsync("history.back");
    }

}
