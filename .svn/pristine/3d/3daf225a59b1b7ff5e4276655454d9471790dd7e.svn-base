@using GEO_DROID.Services
@using System.Globalization
@inject NavigationManager NavigationManager
@inject CultureService Cultureservice


<div class=" d-flex flex-column justify-content-center align-items-center h-100 w-100 " style="" @onclick="@OpenModal">
    <div style=" height: 30px; width: 30px;  filter: invert(100%); background-image : url( img/idioma.png) ; background-size:cover ; background-repeat:no-repeat; background-position:center; ">
    </div>
    <span style=" font-size:2px;  color: white; "> 1.29.55 </span>
</div>

<div class="modal  " tabindex="-1" role="dialog" style="display: @(modalVisible ? "block" : "none")">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Selecciona un Idioma</h5>
                <button type="button" class="close" aria-label="Close" @onclick="HideModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="d-flex w-100 flex-column justify-content-between align-items-center" role="group" aria-label="Cultures">
                    @foreach (var culture in cultures)
                    {
                        <button type="button" class="btn btn-secondary m-1 p-1 w-100" @onclick="() => SetCulture(culture)">@culture.DisplayName</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@code {

    bool modalVisible = false;

    protected override async Task OnInitializedAsync()
    {
        var storedLanguage = Preferences.Get("language", "en");
        var culture = CultureInfo.GetCultureInfo(storedLanguage);
        Thread.CurrentThread.CurrentCulture = culture;
        Thread.CurrentThread.CurrentUICulture = culture;
        CultureInfo.DefaultThreadCurrentCulture = culture;
        CultureInfo.DefaultThreadCurrentUICulture = culture;
    }

    CultureInfo[] cultures = new[]
    {
        new CultureInfo("en"),
        new CultureInfo("es")
    };

    CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
            if (CultureInfo.CurrentCulture != value)
            {
                Thread.CurrentThread.CurrentCulture = value;
                Thread.CurrentThread.CurrentUICulture = value;
                CultureInfo.DefaultThreadCurrentCulture = value;
                CultureInfo.DefaultThreadCurrentUICulture = value;
                Preferences.Set("language", value.Name);
            }
        }
    }

    void OpenModal()
    {
        modalVisible = true;
    }

    void HideModal()
    {
        modalVisible = false;
    }

    private void SetCulture(CultureInfo culture)
    {
        Culture = culture;
        Cultureservice.notifiCulture();
    }
}
