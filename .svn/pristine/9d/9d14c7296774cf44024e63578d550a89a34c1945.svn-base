
using GeoDroid.Data;
using Microsoft.EntityFrameworkCore;


namespace GEO_DROID.Services
{
    public class EstablecimientosService
    {
        private readonly GeoDroidDbContext _dbContext;
        public EstablecimientosService(GeoDroidDbContext dbContext)
        {
            _dbContext = dbContext;
        }
        public IQueryable<Establecimiento> GetEstablecimientosAsync()
        {
            return _dbContext.Establecimientos.AsQueryable();
        }
        public async Task<Establecimiento> GetEstablecimientoById(int id)
        {
            return await _dbContext.Establecimientos
            .Where(a => a.id == id)
            .FirstOrDefaultAsync();
        }
        public async Task<int> SaveEstablecimientoAsync(Establecimiento item)
        {
            var existingEstablecimiento = await _dbContext.Establecimientos.FirstOrDefaultAsync(e => e.id == item.id);
            try
            {
                if (existingEstablecimiento != null)
                {
                    _dbContext.Establecimientos.Update(item);
                }
                else
                {
                    _dbContext.Establecimientos.Add(item);
                }
                return await _dbContext.SaveChangesAsync();
            }
            catch (Exception ex)
            {
                throw;
            }
        }
        public async Task<int> DeleteEstablecimientoAsync(Establecimiento item)
        {
            _dbContext.Establecimientos.Remove(item);
            return await _dbContext.SaveChangesAsync();
        }
        public int GetAveriasCountFromEstablecimiento(Establecimiento establecimiento)
        {
            return _dbContext.Averias.Where(a => a.incidencia.maquina.idestablecimientos == establecimiento.id).Count();
        }
        public List<string> getTiketsList(int id)
        {
            List<string> list = new List<string>();
            list.Add("Rec. Totales");
            list.Add("Recaudacion con desglose");
            list.Add("Rec. Reducido");
            list.Add("Rec. Detallado");
            list.Add("Rec. Detallado Contadores");
            list.Add("Rec. Superdetallado");
            return list;
        }
    }
}
