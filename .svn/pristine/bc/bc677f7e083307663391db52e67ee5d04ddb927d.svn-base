using GeoDroid.Data;
using GeoDroid.Data.Models;
using Microsoft.EntityFrameworkCore;
using static GeoDroid.Data.Models.PatronContadorDetalle;

namespace GEO_DROID.Services
{
    public class SincroService
    {
        EstablecimientosService establecimientosService;
        MaquinaService maquinaService;
        ConceptoAveriaService conceptoAveriaService;
        EstadoAveriaService estadoAveriaService;
        AveriasService averiaService;
        PatronContadorService patronContadorService;
        PatronContadorDetalleService patronContadorDetalleService;

        public SincroService(GeoDroidDbContext dbContext)
        {
            establecimientosService = new EstablecimientosService();
            maquinaService = new MaquinaService();
            conceptoAveriaService = new ConceptoAveriaService();
            estadoAveriaService = new EstadoAveriaService();
            averiaService = new AveriasService();
            patronContadorService = new PatronContadorService();
            patronContadorDetalleService = new PatronContadorDetalleService();
        }

        public void Sincro()
        {
            //// GENERAMOS ESTABLECIMIENTOS ///
            CleanPatrones();
            CleanMaquinas();
            CleanEstablecimientos();

            //// GENERAMOS MAQUINA ////
            CreatePatronesMoc();
            CreateEstablecimientosMoc();
            CreateMaquinasMoc();

            //// GENERAMOS CONCEPTOS ////
            CleanConceptos();
            CreateConceptos();

            //// GENERAMOS ESTADOS ////
            CleanEstados();
            CreateEstados();

        }
        public async void CleanAverias()
        {
            List<Averia> averiaList = averiaService.GetAveriasAsync().ToList();
            foreach (Averia averia in averiaList)
            {
                await averiaService.DeleteAveriaAsync(averia);
            }
        }
        public async void CleanConceptos()
        {
            List<ConceptoAveria> establecimientos = await conceptoAveriaService.GetConceptosAveriasAsync();
            foreach (ConceptoAveria item in establecimientos)
            {
                await conceptoAveriaService.DeleteConceptosAveriasAsync(item);
            }
        }
        public async void CleanEstados()
        {
            List<AveriaEstado> establecimientos = await estadoAveriaService.GetEstadoAveriaAsync();
            foreach (AveriaEstado item in establecimientos)
            {
                await estadoAveriaService.DeleteEstadoAveriaAsync(item);
            }
        }
        public async void CleanEstablecimientos()
        {

            List<Establecimiento> establecimientos = establecimientosService.GetEstablecimientosAsync().ToList();
            foreach (Establecimiento item in establecimientos)
            {
                try
                {
                    await establecimientosService.DeleteEstablecimientoAsync(item);
                }
                catch (Exception)
                {

                    throw;
                }

            }
        }
        public async void CleanMaquinas()
        {
            List<Maquina> mquinas = await maquinaService.GetMaquinasAsync();
            foreach (Maquina item in mquinas)
            {
                await maquinaService.DeleteMaquinaAsync(item);
            }
        }
        public async void CleanPatrones()
        {
            List<PatronContador> mquinas = await patronContadorService.GetPatronesAsync();
            foreach (PatronContador item in mquinas)
            {
                await patronContadorService.DeletePatronAsync(item);
            }
        }
        public async void CreateEstablecimientosMoc()
        {
            Establecimiento establecimiento1 = new Establecimiento();
            Establecimiento establecimiento2 = new Establecimiento();
            Establecimiento establecimiento3 = new Establecimiento();
            Establecimiento establecimiento4 = new Establecimiento();
            Establecimiento establecimiento5 = new Establecimiento();

            establecimiento1.nombre = "ASADOR ZUBIA";
            establecimiento1.codigo = "00003";
            establecimiento1.direccion = "BAINUETXEKO ZUMALDIA., 2 BAJO";

            establecimiento2.nombre = "HAIZEA ELGETA";
            establecimiento2.codigo = "00004";
            establecimiento2.direccion = "BARRENA,48";

            establecimiento3.nombre = "BOLA TOKI";
            establecimiento3.codigo = "00005";
            establecimiento3.direccion = "CHONTA,35";

            establecimiento4.nombre = "CASA CULTURAL DE GALICIA";
            establecimiento4.codigo = "00006";
            establecimiento4.direccion = "SAN ANDRES, 6";

            establecimiento5.nombre = "GURE KAIOLA";
            establecimiento5.codigo = "00007";
            establecimiento5.direccion = "BISTA EDER S/N";

            await establecimientosService.SaveEstablecimientoAsync(establecimiento1);
            await establecimientosService.SaveEstablecimientoAsync(establecimiento2);
            await establecimientosService.SaveEstablecimientoAsync(establecimiento3);
            await establecimientosService.SaveEstablecimientoAsync(establecimiento4);
            await establecimientosService.SaveEstablecimientoAsync(establecimiento5);
        }
        public async void CreatePatronesMoc()
        {
            PatronContador patron1 = new PatronContador();
            PatronContador patron2 = new PatronContador();
            PatronContador patron3 = new PatronContador();
            PatronContador patron4 = new PatronContador();

            await patronContadorService.SavePatronAsync(patron1);
            await patronContadorService.SavePatronAsync(patron2);
            await patronContadorService.SavePatronAsync(patron3);
            await patronContadorService.SavePatronAsync(patron4);

            PatronContadorDetalle patrondetalle1 = new PatronContadorDetalle();
            patrondetalle1.idPatronContador = patron1.id;
            patrondetalle1.orden = 1;
            patrondetalle1.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle1.valorPaso = 0.10m;
            patrondetalle1.tipoContadores = "Entrada";
            patrondetalle1.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle2 = new PatronContadorDetalle();
            patrondetalle2.idPatronContador = patron1.id;
            patrondetalle2.orden = 2;
            patrondetalle2.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle2.valorPaso = 0.10m;
            patrondetalle2.tipoContadores = "Salida";
            patrondetalle2.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle3 = new PatronContadorDetalle();
            patrondetalle3.idPatronContador = patron1.id;
            patrondetalle3.orden = 3;
            patrondetalle3.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle3.valorPaso = 0.10m;
            patrondetalle3.tipoContadores = "Entradas Mecanico";
            patrondetalle3.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle4 = new PatronContadorDetalle();
            patrondetalle4.idPatronContador = patron2.id;
            patrondetalle4.orden = 1;
            patrondetalle4.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle4.valorPaso = 0.20m;
            patrondetalle4.tipoContadores = "Entrada";
            patrondetalle4.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle5 = new PatronContadorDetalle();
            patrondetalle5.idPatronContador = patron2.id;
            patrondetalle5.orden = 2;
            patrondetalle5.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle5.valorPaso = 0.20m;
            patrondetalle5.tipoContadores = "Salida";
            patrondetalle5.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle6 = new PatronContadorDetalle();
            patrondetalle6.idPatronContador = patron2.id;
            patrondetalle6.orden = 3;
            patrondetalle6.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle6.valorPaso = 0.20m;
            patrondetalle6.tipoContadores = "Entradas Mecanico";
            patrondetalle6.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle7 = new PatronContadorDetalle();
            patrondetalle7.idPatronContador = patron3.id;
            patrondetalle7.orden = 1;
            patrondetalle7.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle7.valorPaso = 0.30m;
            patrondetalle7.tipoContadores = "Entrada";
            patrondetalle7.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle8 = new PatronContadorDetalle();
            patrondetalle8.idPatronContador = patron3.id;
            patrondetalle8.orden = 2;
            patrondetalle8.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle8.valorPaso = 0.30m;
            patrondetalle8.tipoContadores = "Salida";
            patrondetalle8.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle9 = new PatronContadorDetalle();
            patrondetalle9.idPatronContador = patron3.id;
            patrondetalle9.orden = 3;
            patrondetalle9.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle9.valorPaso = 0.30m;
            patrondetalle9.tipoContadores = "Entradas Mecanico";
            patrondetalle9.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle10 = new PatronContadorDetalle();
            patrondetalle10.idPatronContador = patron4.id;
            patrondetalle10.orden = 1;
            patrondetalle10.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle10.valorPaso = 0.40m;
            patrondetalle10.tipoContadores = "Entrada";
            patrondetalle10.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle11 = new PatronContadorDetalle();
            patrondetalle11.idPatronContador = patron4.id;
            patrondetalle11.orden = 2;
            patrondetalle11.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle11.valorPaso = 0.40m;
            patrondetalle11.tipoContadores = "Salida";
            patrondetalle11.tipoProtocolos = 1;

            PatronContadorDetalle patrondetalle12 = new PatronContadorDetalle();
            patrondetalle12.idPatronContador = patron4.id;
            patrondetalle12.orden = 3;
            patrondetalle12.tipoBasico = (int)TipoBasico.Jugadas;
            patrondetalle12.valorPaso = 0.40m;
            patrondetalle12.tipoContadores = "Entradas Mecanico";
            patrondetalle12.tipoProtocolos = 1;

            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle1);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle2);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle3);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle4);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle5);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle6);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle7);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle8);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle9);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle10);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle11);
            await patronContadorDetalleService.SavePatronDetalleAsync(patrondetalle12);

        }
        public async void CreateMaquinasMoc()
        {
            Maquina maquina1 = new Maquina();
            Maquina maquina2 = new Maquina();
            Maquina maquina3 = new Maquina();
            Maquina maquina4 = new Maquina();
            Maquina maquina5 = new Maquina();
            Maquina maquina6 = new Maquina();
            Maquina maquina7 = new Maquina();
            Maquina maquina8 = new Maquina();
            Maquina maquina9 = new Maquina();
            Maquina maquina10 = new Maquina();
            Maquina maquina11 = new Maquina();
            Maquina maquina12 = new Maquina();
            Maquina maquina13 = new Maquina();
            Maquina maquina14 = new Maquina();
            Maquina maquina15 = new Maquina();
            Maquina maquina16 = new Maquina();
            Maquina maquina17 = new Maquina();
            Maquina maquina18 = new Maquina();
            Maquina maquina19 = new Maquina();
            Maquina maquina20 = new Maquina();

            List<PatronContador> Patrones = await patronContadorService.GetPatronesAsync();

            maquina1.codigo = "SKIBILB001";
            maquina1.descripcionDistribucion = "SKIBILB001 / LOS 777 MAGNIFICOS";
            maquina1.idPatronContadores = Patrones[0].id;

            maquina2.codigo = "SZU0120012";
            maquina2.descripcionDistribucion = "SZU0120012 / BINGO LOTTO";
            maquina2.idPatronContadores = Patrones[0].id;

            maquina3.codigo = "B099067759";
            maquina3.descripcionDistribucion = "B099067759 / SUPER BANCO DEL TESORO";
            maquina3.idPatronContadores = Patrones[0].id;

            maquina4.codigo = "SZU0120018";
            maquina4.descripcionDistribucion = "SZU0120018 / CASH LINE 2000";
            maquina4.idPatronContadores = Patrones[0].id;

            maquina5.codigo = "B102000263";
            maquina5.descripcionDistribucion = "B102000263 / BOWLING";
            maquina5.idPatronContadores = Patrones[0].id;

            maquina6.codigo = "B098071066";
            maquina6.descripcionDistribucion = "B098071066 / RF BURLESQUE";
            maquina6.idPatronContadores = Patrones[0].id;

            maquina7.codigo = "B101072713";
            maquina7.descripcionDistribucion = "B101072713 / CIRSA GUAY PLUS";
            maquina7.idPatronContadores = Patrones[0].id;

            maquina8.codigo = "B096053516";
            maquina8.descripcionDistribucion = "B096053516 / CASH LINE 2000";
            maquina8.idPatronContadores = Patrones[1].id;

            maquina9.codigo = "B099068535";
            maquina9.descripcionDistribucion = "B099068535 / GRAN CABARET 500";
            maquina9.idPatronContadores = Patrones[1].id;

            maquina10.codigo = "B081000791";
            maquina10.descripcionDistribucion = "B081000791 / CAVERNICOLA";
            maquina10.idPatronContadores = Patrones[1].id;

            maquina11.codigo = "B098070253";
            maquina11.descripcionDistribucion = "B098070253 / CHARLESTON";
            maquina11.idPatronContadores = Patrones[1].id;

            maquina12.codigo = "B098070244";
            maquina12.descripcionDistribucion = "B098070244 / CHICAGO FIVE";
            maquina12.idPatronContadores = Patrones[1].id;

            maquina13.codigo = "B096053517";
            maquina13.descripcionDistribucion = "B096053517 / CHICAGO";
            maquina13.idPatronContadores = Patrones[2].id;

            maquina14.codigo = "B089000741";
            maquina14.descripcionDistribucion = "B089000741 / KONG CHITA";
            maquina14.idPatronContadores = Patrones[2].id;

            maquina15.codigo = "S098000014";
            maquina15.descripcionDistribucion = "S098000014 / LATIN DANCER";
            maquina15.idPatronContadores = Patrones[2].id;

            maquina16.codigo = "S098000004";
            maquina16.descripcionDistribucion = "S098000004 / MANOS A LA OBRA";
            maquina16.idPatronContadores = Patrones[2].id;


            maquina17.codigo = "S098000062";
            maquina17.descripcionDistribucion = "S098000062 / MONEDIN JOKER";
            maquina17.idPatronContadores = Patrones[3].id;

            maquina18.codigo = "B112004926";
            maquina18.descripcionDistribucion = "B112004926 / NO VA MAS";
            maquina18.idPatronContadores = Patrones[3].id;

            maquina19.codigo = "B112004925";
            maquina19.descripcionDistribucion = "B112004925 / NEOPOLIS 2";
            maquina19.idPatronContadores = Patrones[3].id;

            maquina20.codigo = "B098080303";
            maquina20.descripcionDistribucion = "B098080303 / PANCHO VILLA";
            maquina20.idPatronContadores = Patrones[3].id;

            var establecimientos = await establecimientosService.GetEstablecimientosAsync()
                                                      .Take(4)
                                                      .ToListAsync();

            int? establecimientoId1 = establecimientos.ElementAtOrDefault(0)?.id;
            int? establecimientoId2 = establecimientos.ElementAtOrDefault(1)?.id;
            int? establecimientoId3 = establecimientos.ElementAtOrDefault(2)?.id;
            int? establecimientoId4 = establecimientos.ElementAtOrDefault(3)?.id;

            maquina1.idestablecimientos = (int)establecimientoId1;
            maquina2.idestablecimientos = (int)establecimientoId1;
            maquina3.idestablecimientos = (int)establecimientoId1;
            maquina4.idestablecimientos = (int)establecimientoId1;
            maquina5.idestablecimientos = (int)establecimientoId1;
            maquina18.idestablecimientos = (int)establecimientoId1;
            maquina19.idestablecimientos = (int)establecimientoId1;
            maquina20.idestablecimientos = (int)establecimientoId1;

            maquina6.idestablecimientos = (int)establecimientoId2;
            maquina7.idestablecimientos = (int)establecimientoId2;
            maquina8.idestablecimientos = (int)establecimientoId2;
            maquina9.idestablecimientos = (int)establecimientoId2;

            maquina10.idestablecimientos = (int)establecimientoId3;
            maquina11.idestablecimientos = (int)establecimientoId3;
            maquina12.idestablecimientos = (int)establecimientoId3;
            maquina13.idestablecimientos = (int)establecimientoId3;

            maquina14.idestablecimientos = (int)establecimientoId4;
            maquina15.idestablecimientos = (int)establecimientoId4;
            maquina16.idestablecimientos = (int)establecimientoId4;
            maquina17.idestablecimientos = (int)establecimientoId4;

            await maquinaService.SaveMaquinaAsync(maquina1);
            await maquinaService.SaveMaquinaAsync(maquina2);
            await maquinaService.SaveMaquinaAsync(maquina3);
            await maquinaService.SaveMaquinaAsync(maquina4);
            await maquinaService.SaveMaquinaAsync(maquina5);
            await maquinaService.SaveMaquinaAsync(maquina6);
            await maquinaService.SaveMaquinaAsync(maquina7);
            await maquinaService.SaveMaquinaAsync(maquina8);
            await maquinaService.SaveMaquinaAsync(maquina9);
            await maquinaService.SaveMaquinaAsync(maquina10);
            await maquinaService.SaveMaquinaAsync(maquina11);
            await maquinaService.SaveMaquinaAsync(maquina12);
            await maquinaService.SaveMaquinaAsync(maquina13);
            await maquinaService.SaveMaquinaAsync(maquina14);
            await maquinaService.SaveMaquinaAsync(maquina15);
            await maquinaService.SaveMaquinaAsync(maquina16);
            await maquinaService.SaveMaquinaAsync(maquina17);
            await maquinaService.SaveMaquinaAsync(maquina18);
            await maquinaService.SaveMaquinaAsync(maquina19);
            await maquinaService.SaveMaquinaAsync(maquina20);

        }
        public async void CreateConceptos()
        {
            ConceptoAveria concepto1 = new ConceptoAveria();
            ConceptoAveria concepto2 = new ConceptoAveria();
            ConceptoAveria concepto3 = new ConceptoAveria();
            ConceptoAveria concepto4 = new ConceptoAveria();
            ConceptoAveria concepto5 = new ConceptoAveria();
            ConceptoAveria concepto6 = new ConceptoAveria();
            ConceptoAveria concepto7 = new ConceptoAveria();
            ConceptoAveria concepto8 = new ConceptoAveria();

            concepto1.descripcion = "AJUSTE";
            concepto2.descripcion = "CARGA";
            concepto3.descripcion = "LIMPIEZA DE LA MAQUINA";
            concepto4.descripcion = "PROBLEMA DE HARDWARE";
            concepto5.descripcion = "REVISION DE LAS LUCES";
            concepto6.descripcion = "REVISION DE LOS RODILLOS";
            concepto7.descripcion = "REVISION MONEDAS ATASCADAS";
            concepto8.descripcion = "VALIDACION";

            await conceptoAveriaService.SaveConceptosAveriasAsync(concepto1);
            await conceptoAveriaService.SaveConceptosAveriasAsync(concepto2);
            await conceptoAveriaService.SaveConceptosAveriasAsync(concepto3);
            await conceptoAveriaService.SaveConceptosAveriasAsync(concepto4);
            await conceptoAveriaService.SaveConceptosAveriasAsync(concepto5);
            await conceptoAveriaService.SaveConceptosAveriasAsync(concepto6);
            await conceptoAveriaService.SaveConceptosAveriasAsync(concepto7);
            await conceptoAveriaService.SaveConceptosAveriasAsync(concepto8);
        }
        public async void CreateEstados()
        {
            AveriaEstado concepto1 = new AveriaEstado();
            AveriaEstado concepto2 = new AveriaEstado();


            concepto1.descripcion = "FINALIZADA";
            concepto2.descripcion = "PENDIENTE";


            await estadoAveriaService.SaveEstadoAveriaAsync(concepto1);
            await estadoAveriaService.SaveEstadoAveriaAsync(concepto2);

        }
    }
}
