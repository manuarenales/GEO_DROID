@using GEO_DROID.Services
 @inject EstadoAveriaService estadoAveriaService



<div Class=" d-flex flex-column justify-content-start mb-1" @onclick="() => ShowModal()">
    <label class="TextoMedio">
        Estado
    </label>
    @if (estadoAveriaSelected != null)
    {
        <input class="form-control @(IsValid ? "" : "is-invalid")" Style="height: fit-content; min-height: 1.5em;  color: blue" @bind="@estadoAveriaSelected.descripcion" readonly ontouchstart="" />
    }
    else
    {
        <input class="form-control @(IsValid ? "" : "is-invalid")" style="height: 1.5em !important ;" readonly ontouchstart="" />
    }
    @if (!IsValid)
    {
        <div class="invalid-feedback">
            Please choose a valid Estate.
        </div>
    }

</div>

<div class="modal-backdrop" style="z-index: 1049; display: @(modalEstadoVisible ? "block" : "none"); position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background-color: rgba(0, 0, 0, 0.5);"></div>

<div class="modal show " tabindex="-1" role="dialog" style="display: @(modalEstadoVisible ? "block" : "none")">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 95vw; height: 85vh;">
        <div class="modal-content bg-light" style="height: 100%;">
            <div class="modal-header">
                <span class="modal-title Titulo ">Estado</span>
                <button type="button" class="close" aria-label="Close" @onclick="HideModalEstado">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="overflow-y: auto;">
                <input class="form-control mb-2" @bind="Bestado" placeholder="Estado" @oninput="FilterEstados" />
                <div class="m-2" style="height: 80%;  overflow-y: auto;">
                    <ul class="list-group">
                        @foreach (AveriaEstado estado in estados.Where(e => string.IsNullOrEmpty(Bestado) || e.descripcion.ToLower().Contains(Bestado.ToLower())))
                        {
                            <li class="list-group-item" @onclick="() => SetConceptoAveria(estado)">
                                <span>@estado.descripcion</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public int estadoAveria { get; set; }
    [Parameter]
    public EventCallback<int> estadoAveriaChanged { get; set; }
    [Parameter]
    public EventCallback<int> Changed { get; set; }
    [Parameter]
    public int idEstablecimiento { get; set; }
    [Parameter]
    public bool IsValid { get; set; } = true;


    private string Bestado = "";
    private bool IsIdEstadoValid { get; set; } = true;
    public List<AveriaEstado> estados = new List<AveriaEstado>();
    private bool modalEstadoVisible = false;

    public AveriaEstado estadoAveriaSelected;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        estados = await estadoAveriaService.GetEstadoAveriaAsync();
        estadoAveriaSelected = await estadoAveriaService.GetEstadoAveriaById(estadoAveria);
    }

    private void ShowModal()
    {
        modalEstadoVisible = true;
    }

    private void HideModalEstado()
    {
        modalEstadoVisible = false;

    }

    private void SetConceptoAveria(AveriaEstado estado)
    {
        estadoAveriaChanged.InvokeAsync(estado.id);
        Changed.InvokeAsync(estado.id);
        HideModalEstado();
    }

    public void FilterEstados(ChangeEventArgs filter)
    {
        Bestado = filter.Value.ToString();
    }


}
