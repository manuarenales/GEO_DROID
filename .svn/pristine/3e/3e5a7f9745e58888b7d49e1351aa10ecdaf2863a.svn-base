 @page "/opciones/{establecimientoid:int}"
 @using GEO_DROID.Models
 @using GEO_DROID.Services
 @inject NavigationManager Navigation
 @inject EstablecimientosService Builder
 @inject IStringLocalizer<StringLocalizer> Localizer;
 @inject CultureService Cultureservice

<div class="d-flex justify-content-center align-items-center bg-dark  ">
    <h5 class="mt-1" style="color:white"> @establecimiento.nombre  </h5>
</div>

<ul class="list-group ">
    <li class="list-group-item d-flex flex-column justify-content-start align-items-lg-center">
        <span class="m-2"> @Localizer["recaudar"] </span>
        <div class="d-flex justify-content-between align-items-lg-center">
            <div>
                <img class="m-1" src="img/tienda.png" /><span>0:00</span>
            </div>
            <div>
                <img class="m-1" src="img/recaudador.png" /><span>0:00</span>
            </div>
            <div>
                <img class="m-1" src="img/notas.png" /><span>B2600.00</span>
            </div>
        </div>
    </li>
    <li class="list-group-item d-flex flex-column justify-content-start align-items-lg-center">
        <span class="m-2"> @Localizer["motivosmaquinanorecaudada"]  </span>
        <div class="d-flex justify-content-start align-items-lg-center">
            <div>
                <img class="m-1" src="img/maquina.png" /><span>0</span>
            </div>
        </div>
    </li>
    <li class="list-group-item d-flex flex-column justify-content-start align-items-lg-center" @onclick='() => NavigateTo("averias/" + establecimientoid  )'>
        <span class="m-2"> @Localizer["averias"]</span>
        <div class="d-flex justify-content-start align-items-lg-center">
            <div>
                <img class="m-1" src="img/repare.jpg" /><span>0/1</span>
            </div>
        </div>

    </li>
    <li class="list-group-item d-flex flex-column justify-content-start align-items-lg-center">
        <span class="m-2"> @Localizer["cambios"] </span>
        <div class="d-flex justify-content-start align-items-lg-center">
            <div>
                <img class="m-1" src="img/monedas.png" /><span>1/0/0</span>
            </div>
        </div>
    </li>
    <li class="list-group-item d-flex flex-column justify-content-start align-items-lg-center">
        <span class="m-2">  @Localizer["prestamos"] </span>
        <div class="d-flex justify-content-between align-items-lg-center">
            <div>
                <img class="m-1" src="img/tienda.png" /><span>0:00</span>
            </div>
            <div>
                <img class="m-1" src="img/manoflecha1.png" /><span>0:00</span>
            </div>
            <div>
                <img class="m-1" src="img/manoflecha2.png" /><span>0.00</span>
            </div>
        </div>
    </li>
</ul>

<div class="  m-1 p-1 row ">
    <div class="col-6 d-flex p-1">
        <button type="button" class="btn btn-secondary w-100" @onclick="() => ShowModalTickets()"> @Localizer["imprimirtickets"]  </button>
    </div>
    <div class="col-6 d-flex p-1">
        <button type="button" class="btn btn-secondary w-100" @onclick="() => ShowModalInfo()"> @Localizer["informacion"] </button>
    </div>
    <div class="col-12 d-flex justify-content-around align-items-center m-1 p-1">
        <div>
            <img class="m-1" src="img/tienda.png" /><span>0:00</span>
        </div>
        <div>
            <img class="m-1" src="img/recaudador.png" /><span>0:00</span>
        </div>
    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" style="display: @(modalTicketsVisible ? "block" : "none")">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Seleccionar ticket</h5>
                <button type="button" class="close" aria-label="Close" @onclick="HideTicketsModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input class="form-control" placeholder="Buscar" @bind="nameTickets" @oninput="OnNameChangedTickets" />
                <div class="m-2">
                    <ul class="list-group">
                        @foreach (string item in tickets)
                        {
                            <li class="list-group-item">
                                <span>@item</span>
                            </li>
                        }
                    </ul>
                </div>
                <div class="d-flex p-1 m-1">
                    <button class="btn btn-info w-100 m-2 p-1" disabled="@string.IsNullOrEmpty(selectedItem)">Seleccionar</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal" tabindex="-1" role="dialog" style="display: @(modalInfoVisible ? "block" : "none")">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Información del Establecimiento</h5>
                <button type="button" class="close" aria-label="Close" @onclick="HideInfoModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="m-2">
                    <ul class="list-group">
                        <li class="list-group-item">
                            <label>Nombre:</label>
                            <span style="color: blue;">@establecimiento.nombre</span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public int establecimientoid { get; set; }

    public bool modalTicketsVisible = false;
    public bool modalInfoVisible = false;

    private string nameTickets;
    public Establecimiento establecimiento = new Establecimiento();
    public List<string> tickets = new List<string>();
    public List<string> infoList = new List<string>();

    private string selectedItem = "";

    protected override async Task OnInitializedAsync()
    {
        establecimiento = await Builder.getEstablecimientoByID(establecimientoid);
        tickets = Builder.getTiketsList(establecimientoid);
        Cultureservice.CultureChanged += StateHasChanged;
    }

    Task OnNameChangedTickets(ChangeEventArgs e)
    {
        nameTickets = e.Value.ToString();
        tickets = Builder.getTiketsList(establecimientoid);
        return Task.CompletedTask;
    }
    Task OnNameChangedInfo(string value)
    {
        return Task.CompletedTask;
    }

    private void ShowModalTickets()
    {
        modalTicketsVisible = true;
    }
    private void ShowModalInfo()
    {
        modalInfoVisible = true;
    }

    private void NavigateTo(string pageTitle)
    {
        Navigation.NavigateTo($"/{pageTitle.ToLower()}");
    }

    private void HideTicketsModal()
    {
        modalTicketsVisible = false;
    }

    private void HideInfoModal()
    {
        modalInfoVisible = false;
    }
}
