@using GEO_DROID.Services
@using System.Globalization
@inject NavigationManager NavigationManager
@inject CultureService Cultureservice

<Div class="d-flex flex-column justify-content-center align-items-center " @onclick="@ShowModal">
    <img class=" " src="img/idioma.png" />
    <span style="font-size: 15px;
    color: white;">1.29.55</span>
</Div>

<Modal @ref="modalRef" Class="front">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Selecciona un Idioma</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <div class="d-flex w-100 flex-column justify-content-between align-items-center" role="group" aria-label="Cultures">
                    @foreach (var culture in cultures)
                    {
                        <button type="button" class="btn btn-secondary m-1 p-1 w-100" @onclick="() => SetCulture(culture)">@culture.DisplayName</button>
                    }
                </div>
            </Field>
        </ModalBody>
    </ModalContent>
</Modal>

@code {

    private Modal modalRef;

    protected override async Task OnInitializedAsync()
    {
        var storedLanguage = Preferences.Get("language", "en");
        var culture = CultureInfo.GetCultureInfo(storedLanguage);
        Thread.CurrentThread.CurrentCulture = culture;
        Thread.CurrentThread.CurrentUICulture = culture;
        CultureInfo.DefaultThreadCurrentCulture = culture;
        CultureInfo.DefaultThreadCurrentUICulture = culture;
    }

    CultureInfo[] cultures = new[]
    {
        new CultureInfo("en"),
        new CultureInfo("es")
    };

    CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
            if (CultureInfo.CurrentCulture != value)
            {
                Thread.CurrentThread.CurrentCulture = value;
                Thread.CurrentThread.CurrentUICulture = value;
                CultureInfo.DefaultThreadCurrentCulture = value;
                CultureInfo.DefaultThreadCurrentUICulture = value;
                Preferences.Set("language", value.Name);
            }
        }
    }

    private Task ShowModal()
    {
        return modalRef.Show();
    }

    private Task HideModal()
    {
        return modalRef.Hide();
    }

    private void SetCulture(CultureInfo culture)
    {
        Culture = culture;
        Cultureservice.notifiCulture();
    }
}
