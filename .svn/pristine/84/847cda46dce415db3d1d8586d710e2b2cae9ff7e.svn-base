using GEO_DROID.Models;
using SQLite;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GEO_DROID.Services
{
    public class IncidenciaService
    {

        SQLiteAsyncConnection Database;

        public IncidenciaService()
        {
            Init();
        }

        async Task Init()
        {
            if (Database is not null)
                return;
            try
            {
                Database = new SQLiteAsyncConnection(Constants.DatabasePath, Constants.Flags);
                var result = await Database.CreateTableAsync<Incidencia>();
            }
            catch (Exception e)
            {
                throw;
            }
        }


        public async Task<List<Incidencia>> GetIncidenciasAsync()
        {
            List<Incidencia> resp = new List<Incidencia>();

            resp = await Database.Table<Incidencia>().ToListAsync();
            return resp;
        }

        public async Task<Incidencia> GetIncidenciaByIdAsync(int id)
        {
            var resp = await Database.Table<Incidencia>().Where(a => a.id == id).FirstOrDefaultAsync();

            return resp;
        }

        public async Task<int> SaveIncidenciaAsync(Incidencia item)
        {
            var resp = await Database.InsertAsync(item);
            return resp;

        }

        public async Task<int> DeleteIncidenciaAsync(Incidencia item)
        {
            var yes = await Database.Table<Incidencia>().DeleteAsync(i => i.id == item.id);
            return yes;
        }

    }
}
